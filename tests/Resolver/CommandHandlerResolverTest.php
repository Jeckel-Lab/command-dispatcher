<?php
declare(strict_types=1);

namespace Tests\JeckelLab\ContainerDispatcher\Resolver;

use JeckelLab\ContainerDispatcher\CommandHandlerInterface;
use JeckelLab\ContainerDispatcher\Command\CommandInterface;
use JeckelLab\ContainerDispatcher\Resolver\CommandHandlerResolver;
use JeckelLab\ContainerDispatcher\Resolver\HandlerNotFoundException;
use PHPUnit\Framework\TestCase;

/**
 * Class CommandHandlerResolverTest
 */
final class CommandHandlerResolverTest extends TestCase
{
    /**
     * @var CommandHandlerResolver
     */
    protected $resolver;

    /**
     * setup
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->resolver = new CommandHandlerResolver();
    }

    /**
     * @test resolve
     */
    public function testResolveWithNoHandlers(): void
    {
        $this->expectException(HandlerNotFoundException::class);

        $this->resolver->resolve($this->createMock(CommandInterface::class));
    }

    public function testResolve(): void
    {
        $command = $this->createMock(CommandInterface::class);
        $handler = $this->createMock(CommandHandlerInterface::class);

        $this->assertSame($this->resolver, $this->resolver->registerHandler($handler, [get_class($command)]));
        $this->assertSame($handler, $this->resolver->resolve($command));
    }
}
